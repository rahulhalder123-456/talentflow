
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    function isAdmin() {
      return request.auth.uid in get(/databases/$(database)/documents/config/admins).data.uids;
    }
    function isSignedIn() {
      return request.auth != null;
    }

    // --- Projects Collection ---
    match /projects/{projectId} {
      allow read: if isSignedIn(); // Any signed-in user can view any project details.
      allow create: if isSignedIn(); // Any signed-in user can post a project.
      allow update: if isOwner(resource.data.userId) || isAdmin(); // Only owner or admin can update.
      allow delete: if isAdmin(); // Only admin can delete.

      // --- Time Entries Subcollection ---
      match /timeEntries/{entryId} {
        // Allow read for the project owner or any admin.
        allow read: if isOwner(get(/databases/$(database)/documents/projects/$(projectId)).data.userId) || isAdmin();
        // Allow write only for admins.
        allow write: if isAdmin();
      }
    }

    // --- Users Collection ---
    match /users/{userId} {
      // Users can read/write their own profile. Admins can read/write any profile.
      allow read, write: if isOwner(userId) || isAdmin();
    }
    
    // --- Config Collection ---
    match /config/admins {
      // Any signed-in user can read the list of admins to check for admin UI.
      allow get: if isSignedIn();
      // Only an existing admin can modify the list of admins.
      allow write: if isAdmin();
    }
    
    // --- Featured Projects Collection ---
    match /featuredProjects/{projectId} {
        // Public can view, only admins can manage.
        allow read: if true;
        allow write: if isAdmin();
    }

    // --- Reviews Collection ---
    match /reviews/{reviewId} {
        // Public can view reviews.
        allow read: if true;
        // Only the user who created the project can create a review for it.
        allow create: if isOwner(request.resource.data.userId);
        // Only an admin can delete a review.
        allow delete: if isAdmin();
    }

    // --- Chats Collection ---
    match /chats/{chatId} {
      // Participants are the client user and the admin user ID.
      // e.g. chatId is `support_CLIENT_UID`
      // A user can access a chat if their UID is in the chatId.
      allow read, write: if isSignedIn() && (request.auth.uid in string(chatId).split('_') || isAdmin());
      
      match /messages/{messageId} {
          allow read, write: if isSignedIn() && (request.auth.uid in string(chatId).split('_') || isAdmin());
      }
    }
  }
}
